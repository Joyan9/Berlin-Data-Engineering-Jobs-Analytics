version: '3'

x-airflow-common: &airflow-common
  image: berlin-jobs-analytics:latest
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__FERNET_KEY=''
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
    - AIRFLOW_HOME=/opt/airflow
    - PROJECT_ROOT=/opt/airflow/berlin_jobs_analytics
    - DBT_PROJECT_PATH=/opt/airflow/berlin_jobs_analytics/dbt_project/berlin_data_engg_job_analytics
    - TERRAFORM_PATH=/opt/airflow/berlin_jobs_analytics/terraform
    - TF_DATA_DIR=/opt/airflow/berlin_jobs_analytics/terraform/.terraform
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./pipeline:/opt/airflow/berlin_jobs_analytics/pipeline
    - ./dbt_project:/opt/airflow/berlin_jobs_analytics/dbt_project
    - ./terraform:/opt/airflow/berlin_jobs_analytics/terraform
    - ./.dlt:/opt/airflow/berlin_jobs_analytics/.dlt
    - terraform-data:/opt/airflow/berlin_jobs_analytics/terraform/.terraform
  depends_on:
    - postgres
  networks:
    - airflow-network

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always
    networks:
      - airflow-network

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "50000:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=''
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW_HOME=/opt/airflow
      - PROJECT_ROOT=/opt/airflow/berlin_jobs_analytics
      - DBT_PROJECT_PATH=/opt/airflow/berlin_jobs_analytics/dbt_project/berlin_data_engg_job_analytics
      - TERRAFORM_PATH=/opt/airflow/berlin_jobs_analytics/terraform
      - TF_DATA_DIR=/opt/airflow/berlin_jobs_analytics/terraform/.terraform
      - _AIRFLOW_DB_UPGRADE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=airflow
      - _AIRFLOW_WWW_USER_PASSWORD=airflow
    user: "0:0"
    volumes:
      - ./:/sources

  dbt-docs:
    <<: *airflow-common
    command: bash -c "cd ${DBT_PROJECT_PATH} && dbt docs generate && dbt docs serve --port 8888"
    ports:
      - "8888:8888"
    depends_on:
      - airflow-scheduler
    restart: always

  terraform:
    <<: *airflow-common
    entrypoint: /bin/bash
    command: -c "echo 'Terraform service ready. Use docker-compose exec terraform bash to access it.'; tail -f /dev/null"
    volumes:
      - ./terraform:/opt/airflow/berlin_jobs_analytics/terraform
      - terraform-data:/opt/airflow/berlin_jobs_analytics/terraform/.terraform
      - gcp-credentials:/opt/airflow/berlin_jobs_analytics/terraform/credentials
      - ./terraform/credentials:/opt/airflow/berlin_jobs_analytics/terraform/credentials

volumes:
  postgres-db-volume:
  terraform-data:
  gcp-credentials:

networks:
  airflow-network:
    driver: bridge