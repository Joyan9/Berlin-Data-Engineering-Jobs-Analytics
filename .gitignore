# Python virtual environment
venv/
env/
.env/
.venv/
ENV/

# Python bytecode
__pycache__/
*.py[cod]
*$py.class
*.so
.Python

# Distribution / packaging
dist/
build/
*.egg-info/
.eggs/

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
coverage.xml
*.cover
.hypothesis/

# Jupyter Notebook
.ipynb_checkpoints

# IDE specific files
.idea/
.vscode/
*.swp
*.swo
.DS_Store

# Terraform files
.credentials/
.terraform/
*.tfstate
*.tfstate.backup
*.tfstate.*.backup
*.tfplan
.terraform.lock.hcl
terraform.tfvars
terraform-sa-key.json

# Google Cloud
*-sa-key.json
*.json.key
*credentials*.json
*service-account*.json

# Environment variables
.env
.env.local
*.env

# dbt files
dbt_project/target/
dbt_project/dbt_packages/
dbt_project/logs/
.user.yml

# dlt files
.dlt/
.dlt-profile
.dlt/secrets.toml

# Airflow-specific files to ignore
airflow/logs/
airflow/*.log
airflow/*.pid
airflow/airflow.cfg
airflow/webserver_config.py
airflow/airflow.db
airflow/airflow-webserver.pid
airflow/airflow-scheduler.pid
airflow/airflow-worker.pid
airflow/airflow-triggerer.pid
airflow/.airflowignore
airflow/standalone_admin_password.txt

# Airflow temporary files
airflow/*.err
airflow/*.out
airflow/*.log.*
airflow/logs/
airflow/plugins/
airflow/__pycache__/
airflow/dags/__pycache__/
airflow/.pytest_cache/

# Airflow metastore
airflow/metastore_db/

# Airflow unit test configuration
airflow/unittests.cfg

# If using SQLite as a database
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log
pip-log.txt
pip-delete-this-directory.txt

# Data files (if any local testing/samples)
*.csv
*.tsv
*.xls
*.xlsx
*.parquet
*.avro
*.json
!requirements.txt
!sample_data/*.json

# OS specific
.DS_Store
Thumbs.db